{"writable": true, "path": "fuzzy_py3/Crawler.ipynb", "type": "notebook", "name": "Crawler.ipynb", "content": {"nbformat_minor": 2, "metadata": {"language_info": {"codemirror_mode": {"name": "ipython", "version": 3}, "file_extension": ".py", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "name": "python", "version": "3.5.2", "mimetype": "text/x-python"}, "kernelspec": {"display_name": "Python 3", "language": "python", "name": "python3"}}, "nbformat": 4, "cells": [{"execution_count": 66, "source": "import requests\nimport bs4\nimport pandas as pd\nimport numpy as np\n\ndef extractDf(url):\n    r = requests.get(url)\n    html = r.text\n\n    soup = bs4.BeautifulSoup(html, 'html.parser')\n    allRows = soup.find('tbody').find_all('tr')\n\n    results = [[data.text.split('?')[0].replace('\\n','').replace('\\t','') for data in td.find_all('td')]\\\n               for td in allRows]\n\n    rowspan = [] #row\n\n    for tr_no, tr in enumerate(allRows): #enumerate returns index, data \n        tmp = []\n        for td_no, data in enumerate(tr.find_all('td')):\n            if data.has_attr(\"rowspan\"):\n                rowspan.append((tr_no, td_no, int(data[\"rowspan\"]), data.get_text().split('?')[0].replace('\\n','').replace('\\t','')))\n\n    if rowspan:\n        for i in rowspan:\n            for j in range(1, i[2]):\n                results[i[0]+j].insert(i[1],i[3])\n\n    headers=[]\n    for i in range(2,11):\n        if i==6:\n            continue\n        elif i==9:\n            headers.append(soup.find('thead').find('th',{'class':'th_result'+str(i)+'_on'}).text)\n        else:\n            headers.append(soup.find('thead').find('th',{'class':'th_result'+str(i)}).text)    \n    \n    df = pd.DataFrame(data=results)\n    df = df.drop(0,1)\n    df.columns = headers\n    \n    df['\uc124\uc815\uc561'] = df['\uc124\uc815\uc561'].str.replace(',','').astype(float)\n    df['1\uac1c\uc6d4 \uc99d\uac10\uc561'] = df['1\uac1c\uc6d4 \uc99d\uac10\uc561'].str.replace(',','').astype(float)\n    df = df.replace('N/A',np.nan)\n    df.dropna(inplace=True)\n    \n    df = df.apply(pd.to_numeric, args =('ignore',))\n    df['MBY'] = ((((100+df['1\ub144'])/100)**(1/12))-1)*100\n    df['MBQ'] = ((((100+df['3\uac1c\uc6d4'])/100)**(1/3))-1)*100\n    df = df.drop(df[(df.MBY<0)|(df.MBQ<0)].index)\n    \n    dfStd = df[['1\uac1c\uc6d4','MBY','MBQ']].std(axis=1)\n    df['Risk'] = (dfStd - dfStd.min())/(dfStd.max()-dfStd.min())\n    \n    df.reset_index(inplace=True, drop=True)\n    return df\n\ndomesticDf=extractDf('http://info.finance.naver.com/fund/fundTypeEarningRate.nhn?ivstAreaWorldYn=N')\noverseasDf=extractDf('http://info.finance.naver.com/fund/fundTypeEarningRate.nhn?ivstAreaWorldYn=Y')\n\ndomesticDf", "metadata": {"deletable": true, "editable": true, "trusted": true, "collapsed": false, "scrolled": false}, "outputs": [{"execution_count": 66, "data": {"text/html": "<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>\uc18c\uc720\ud615</th>\n      <th>\ud380\ub4dc\uc218</th>\n      <th>\uc124\uc815\uc561</th>\n      <th>1\uac1c\uc6d4 \uc99d\uac10\uc561</th>\n      <th>\uc62c\ud574</th>\n      <th>1\uac1c\uc6d4</th>\n      <th>3\uac1c\uc6d4</th>\n      <th>1\ub144</th>\n      <th>MBY</th>\n      <th>MBQ</th>\n      <th>Risk</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>K200\uc778\ub371\uc2a4</td>\n      <td>71</td>\n      <td>74393.0</td>\n      <td>-1169.0</td>\n      <td>2.94</td>\n      <td>1.50</td>\n      <td>9.00</td>\n      <td>16.38</td>\n      <td>1.272111</td>\n      <td>2.914247</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>\ubc30\ub2f9\uc8fc\uc2dd</td>\n      <td>40</td>\n      <td>25684.0</td>\n      <td>-1152.0</td>\n      <td>0.32</td>\n      <td>0.40</td>\n      <td>4.92</td>\n      <td>3.59</td>\n      <td>0.294354</td>\n      <td>1.613816</td>\n      <td>0.823801</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>\uacf5\uaca9\uc801\uc790\uc0b0\ubc30\ubd84</td>\n      <td>23</td>\n      <td>1526.0</td>\n      <td>-42.0</td>\n      <td>0.76</td>\n      <td>0.40</td>\n      <td>3.80</td>\n      <td>2.33</td>\n      <td>0.192123</td>\n      <td>1.250953</td>\n      <td>0.629860</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>\uc77c\ubc18\uc8fc\uc2dd\ud63c\ud569</td>\n      <td>81</td>\n      <td>25135.0</td>\n      <td>299.0</td>\n      <td>0.70</td>\n      <td>0.25</td>\n      <td>3.65</td>\n      <td>3.69</td>\n      <td>0.302419</td>\n      <td>1.202157</td>\n      <td>0.600821</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>\ucd08\ub2e8\uae30\ucc44\uad8c</td>\n      <td>21</td>\n      <td>47874.0</td>\n      <td>-179.0</td>\n      <td>0.21</td>\n      <td>0.15</td>\n      <td>0.38</td>\n      <td>1.38</td>\n      <td>0.114279</td>\n      <td>0.126507</td>\n      <td>0.018388</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>\uc77c\ubc18\ucc44\uad8c</td>\n      <td>66</td>\n      <td>46991.0</td>\n      <td>1624.0</td>\n      <td>0.28</td>\n      <td>0.21</td>\n      <td>0.10</td>\n      <td>1.36</td>\n      <td>0.112633</td>\n      <td>0.033322</td>\n      <td>0.097615</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>MMF</td>\n      <td>124</td>\n      <td>1043233.0</td>\n      <td>120745.0</td>\n      <td>0.14</td>\n      <td>0.11</td>\n      <td>0.32</td>\n      <td>1.32</td>\n      <td>0.109340</td>\n      <td>0.106553</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>\ubd80\ub3d9\uc0b0\uc784\ub300</td>\n      <td>2</td>\n      <td>673.0</td>\n      <td>0.0</td>\n      <td>0.65</td>\n      <td>0.52</td>\n      <td>1.41</td>\n      <td>9.75</td>\n      <td>0.778304</td>\n      <td>0.467808</td>\n      <td>0.185210</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>\uacf5\ubaa8\uc8fc\ud558\uc774\uc77c\ub4dc</td>\n      <td>6</td>\n      <td>2308.0</td>\n      <td>-137.0</td>\n      <td>0.53</td>\n      <td>0.45</td>\n      <td>1.40</td>\n      <td>2.55</td>\n      <td>0.210056</td>\n      <td>0.464506</td>\n      <td>0.158903</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>\ucc44\uad8c\uc54c\ud30c</td>\n      <td>57</td>\n      <td>18072.0</td>\n      <td>-1130.0</td>\n      <td>0.14</td>\n      <td>0.05</td>\n      <td>0.63</td>\n      <td>1.04</td>\n      <td>0.086256</td>\n      <td>0.209561</td>\n      <td>0.092154</td>\n    </tr>\n  </tbody>\n</table>\n</div>", "text/plain": "       \uc18c\uc720\ud615  \ud380\ub4dc\uc218        \uc124\uc815\uc561   1\uac1c\uc6d4 \uc99d\uac10\uc561    \uc62c\ud574   1\uac1c\uc6d4   3\uac1c\uc6d4     1\ub144       MBY  \\\n0  K200\uc778\ub371\uc2a4   71    74393.0   -1169.0  2.94  1.50  9.00  16.38  1.272111   \n1     \ubc30\ub2f9\uc8fc\uc2dd   40    25684.0   -1152.0  0.32  0.40  4.92   3.59  0.294354   \n2  \uacf5\uaca9\uc801\uc790\uc0b0\ubc30\ubd84   23     1526.0     -42.0  0.76  0.40  3.80   2.33  0.192123   \n3   \uc77c\ubc18\uc8fc\uc2dd\ud63c\ud569   81    25135.0     299.0  0.70  0.25  3.65   3.69  0.302419   \n4    \ucd08\ub2e8\uae30\ucc44\uad8c   21    47874.0    -179.0  0.21  0.15  0.38   1.38  0.114279   \n5     \uc77c\ubc18\ucc44\uad8c   66    46991.0    1624.0  0.28  0.21  0.10   1.36  0.112633   \n6      MMF  124  1043233.0  120745.0  0.14  0.11  0.32   1.32  0.109340   \n7    \ubd80\ub3d9\uc0b0\uc784\ub300    2      673.0       0.0  0.65  0.52  1.41   9.75  0.778304   \n8  \uacf5\ubaa8\uc8fc\ud558\uc774\uc77c\ub4dc    6     2308.0    -137.0  0.53  0.45  1.40   2.55  0.210056   \n9     \ucc44\uad8c\uc54c\ud30c   57    18072.0   -1130.0  0.14  0.05  0.63   1.04  0.086256   \n\n        MBQ      Risk  \n0  2.914247  1.000000  \n1  1.613816  0.823801  \n2  1.250953  0.629860  \n3  1.202157  0.600821  \n4  0.126507  0.018388  \n5  0.033322  0.097615  \n6  0.106553  0.000000  \n7  0.467808  0.185210  \n8  0.464506  0.158903  \n9  0.209561  0.092154  "}, "output_type": "execute_result", "metadata": {}}], "cell_type": "code"}, {"execution_count": null, "source": "", "metadata": {"deletable": true, "editable": true, "trusted": true, "collapsed": true}, "outputs": [], "cell_type": "code"}]}, "format": "json", "created": "2017-02-12T04:29:59.441068+00:00", "mimetype": null, "last_modified": "2017-02-12T04:29:59.441068+00:00"}£T`zk6      Xßò«Xßò«=šrÔXæZu   Y    :http://localhost:8888/api/contents/fuzzy_py3/Crawler.ipynb?type=notebook&_=1491071659014 necko:classified 1 strongly-framed 1 request-method GET response-head HTTP/1.1 200 OK
Content-Type: application/json
Last-Modified: Sun, 12 Feb 2017 04:29:59 GMT
Content-Security-Policy: frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'
Server: TornadoServer/4.4.2
Date: Sat, 01 Apr 2017 18:34:19 GMT
Content-Length: 8339
Etag: "a7fe3e86f8e8a7e0043b8da6ef7ac26b3e1e5a58"
 original-response-headers Content-Type: application/json
Last-Modified: Sun, 12 Feb 2017 04:29:59 GMT
Content-Security-Policy: frame-ancestors 'self'; report-uri /api/security/csp-report; default-src 'none'
Server: TornadoServer/4.4.2
Date: Sat, 01 Apr 2017 18:34:19 GMT
Content-Length: 8339
Etag: "a7fe3e86f8e8a7e0043b8da6ef7ac26b3e1e5a58"
    “